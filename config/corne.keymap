/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3
#define MOUSE 4

/ {
    behaviors {
        mmv: mouse_move {
            compatible = "zmk,behavior-mouse-move";
            label = "MOUSE_MOVE";
            #binding-cells = <1>;
            time-to-max-speed-ms = <500>;              
            acceleration-exponent = <1>;              
        };
        mmv_down: mouse_move_down {
            compatible = "zmk,behavior-mouse-speed";
            label = "MOUSE_MOVE_DOWN";
            #binding-cells = <0>;
            acceleration-exponent = <1>;
            time-to-max-speed-ms = <500>;
            delay-ms = <0>;
            trigger-positions = <1>;
        };
        mmv_up: mouse_move_up {
            compatible = "zmk,behavior-mouse-speed";
            label = "MOUSE_MOVE_UP";
            #binding-cells = <0>;
            acceleration-exponent = <1>;
            time-to-max-speed-ms = <500>;
            delay-ms = <0>;
            trigger-positions = <2>;
        };
    };

    // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
                &kp LALT  &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp ESC
                            &kp LCTRL &mt LGUI BSPC &lt LOWER DEL    &lt RAISE ENTER &kp SPACE &kp RSHIFT
            >;
        };

        lower_layer {
            bindings = <
                &trans &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT    &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &kp DEL
                &trans &kp N1   &kp N2   &kp N3   &kp N4   &kp N5       &kp N6    &kp N7    &kp N8    &kp N9   &kp N0   &kp MINUS
                &trans &kp PLUS &kp LBKT &kp LBRC &kp LPAR &kp AMPS     &kp EQUAL &kp RPAR  &kp RBRC  &kp RBKT &kp BSLH &kp ESC
                                    &trans &trans &trans   &trans &trans &trans
            >;
        };

        raise_layer {
            bindings = <
                &trans &kp DEL  &trans    &kp UNDER &kp PLUS   &kp PG_UP     &trans    &trans     &trans     &kp BSLH  &kp PIPE  &trans
                &trans &kp HOME &kp END   &kp MINUS &kp EQUAL  &kp PG_DN     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT &kp K_APP &kp GRAVE
                &trans &kp LT   &kp GT    &kp K_COPY &kp K_PASTE &kp SEMI    &kp C_PP  &kp C_PREV &kp C_NEXT &tog MOUSE &trans    &kp TILDE
                                        &trans     &trans      &trans         &trans    &trans     &trans
            >;
        };

        adjust_layer {
            bindings = <
                &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &none &none &none &none &none &studio_unlock
                &out OUT_TOG &none        &none        &none        &none        &none          &none &none &none &none &none &none
                &none        &none        &none        &none        &none        &none          &none &none &none &none &none &none
                                                    &none        &none        &none          &none &none &none
            >;
        };

        mouse_layer {
            bindings = <
                &none &none      &mmv_up    &none      &none &none    &none      &mwh SCROLL_LEFT &mwh SCROLL_UP   &mwh SCROLL_RIGHT &none     &none 
                &none &mmv_down  &none      &mmv_up    &none &none    &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &mkp LCLK &mkp RCLK
                &none &none      &mmv_down  &none      &none &none    &none      &mwh SCROLL_DOWN &none        &none          &none     &none
                                        &none &none &none    &mkp LCLK &mkp RCLK &none
            >;
        };
    };
};
